// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingListAPI.DbContexts;

namespace ShoppingListAPI.Migrations
{
    [DbContext(typeof(ShoppingListContext))]
    [Migration("20211031082819_Inital")]
    partial class Inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShoppingListAPI.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ShoppingListAPI.Entities.ProductsList", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsBought")
                        .HasColumnType("bit");

                    b.HasKey("ProductId", "ShoppingListId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ProductsList");
                });

            modelBuilder.Entity("ShoppingListAPI.Entities.ShoppingList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ListTagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ListTagId");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("ShoppingListAPI.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ShoppingListAPI.Entities.ProductsList", b =>
                {
                    b.HasOne("ShoppingListAPI.Entities.Product", "Product")
                        .WithMany("ProductsList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingListAPI.Entities.ShoppingList", "ShoppingList")
                        .WithMany("ProductsList")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("ShoppingListAPI.Entities.ShoppingList", b =>
                {
                    b.HasOne("ShoppingListAPI.Entities.Tag", "ListTag")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("ListTagId");

                    b.Navigation("ListTag");
                });

            modelBuilder.Entity("ShoppingListAPI.Entities.Product", b =>
                {
                    b.Navigation("ProductsList");
                });

            modelBuilder.Entity("ShoppingListAPI.Entities.ShoppingList", b =>
                {
                    b.Navigation("ProductsList");
                });

            modelBuilder.Entity("ShoppingListAPI.Entities.Tag", b =>
                {
                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
